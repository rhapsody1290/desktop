#!/usr/bin/env python
# coding: utf-8

import argparse
import random
import string
import uuid

import pymysql


def randomstr(length):
    return ''.join(random.choice(string.lowercase) for i in range(length))


def recreate_db():
    conn = pymysql.connect(host="172.18.69.6", port=3306,
                           user="root", password="toor")

    drop_db = "DROP DATABASE IF EXISTS eleme;"
    create_db = "CREATE DATABASE eleme;"
    cur = conn.cursor()
    cur.execute(drop_db)
    cur.execute(create_db)

    cur.close()
    conn.commit()
    conn.close()


def refresh_table(conn):
    cur = conn.cursor()

    create_table_food = """
    CREATE TABLE `food` (
        `id` int(11) NOT NULL AUTO_INCREMENT,
        `stock` int(11) NOT NULL,
        `price` int(11) NOT NULL,
        PRIMARY KEY (`id`)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
    """
    cur.execute(create_table_food)

    create_table_user = """
    CREATE TABLE `user` (
        `id` int(11) NOT NULL AUTO_INCREMENT,
        `name` varchar(255) NOT NULL,
        `password` varchar(255) NOT NULL,
        PRIMARY KEY (`id`),
        UNIQUE KEY `uniq_name` (`name`)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
    """
    cur.execute(create_table_user)

    cur.close()


def insert_user(conn, rows=1000):
    cur = conn.cursor()

    cur.execute("INSERT INTO `user` (name, password) VALUES ('root', 'toor');")

    users = {}
    while len(users) < rows - 1:
        users[randomstr(random.randint(5, 8))] = uuid.uuid4().hex

    for name, password in users.items():
        cur.execute(
            "INSERT INTO `user` (name, password) VALUES ('%s', '%s');" %
            (name, password))

    cur.close()


def insert_food(conn, rows=100, stock=100):
    cur = conn.cursor()
    for i in range(rows):
        cur.execute("INSERT INTO `food` (stock, price) VALUES (%s, %s)" %
                    (stock, random.randint(3, 30)))
    cur.close()


def main():
    recreate_db()

    parser = argparse.ArgumentParser()
    parser.add_argument("-u", "--users")
    parser.add_argument("-f", "--foods")
    args = parser.parse_args()

    conn = pymysql.connect(host="172.18.69.6", port=3306,
                           user="root", password="toor", db="eleme")

    print("start gen...")

    print("drop table...")
    refresh_table(conn)
    print("insert user...")
    insert_user(conn, rows=float(args.users))
    print("insert food...")
    insert_food(conn, stock=float(args.foods))

    conn.commit()
    conn.close()


if __name__ == "__main__":
    main()
